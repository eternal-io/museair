from itertools import chain
from matplotlib import pyplot as plt

STATS = (
    (
        "#2196F3",
        "rapidhash",
        "--",
        "19.61,18.59,18.59,12.70,25.81,25.81,25.81,12.39,25.47,25.47,25.47,12.04,12.17,12.17,12.17,12.17,29.58,29.58,29.58,29.74,29.58,29.58,29.42,29.42,29.42,29.42,29.42,29.42,29.42,29.42,29.42,29.58,34.51,34.51,34.51,34.51,34.51,34.32,34.32,34.32,34.32,34.32,34.32,34.32,34.32,34.32,34.32,34.32,31.16,31.16,31.16,31.16,31.16,31.16,31.16,31.16,31.16,31.16,31.16,31.16,31.16,31.16,31.16,31.16,37.59,37.59,37.59,37.59,37.59,37.59,37.59,37.59,37.59,37.59,37.59,37.59,37.59,37.59,37.59,37.59,41.68,41.68,41.68,41.68,41.68,41.68,41.68,41.68,41.68,41.68,41.68,41.68,41.68,41.68,41.68",
    ),
    (
        "#263238",
        "wyhash 4.2",
        "--",
        "19.06,19.00,19.00,12.81,27.94,27.94,27.94,12.39,26.29,26.29,26.29,12.74,12.81,12.81,12.88,12.81,29.58,29.58,29.58,29.58,29.58,29.58,29.58,29.58,29.58,29.58,29.58,29.58,29.58,29.58,29.58,29.58,35.33,35.33,35.33,35.33,35.33,35.33,35.33,35.33,35.33,35.33,35.33,35.33,35.33,35.33,35.33,32.05,32.22,32.05,32.05,32.05,32.22,32.05,32.05,32.22,32.87,32.87,32.87,32.87,32.87,32.83,32.05,33.04,36.35,36.15,36.15,36.15,36.15,36.15,36.15,36.15,36.15,36.15,36.15,36.15,36.15,36.15,36.15,36.15,41.08,41.08,41.08,41.08,41.08,41.08,41.08,41.08,41.08,41.08,41.08,41.08,41.08,41.08,41.08",
    ),
    (
        "#90A4AE",
        "wyhash.condom 4.2",
        "-",
        "18.80,19.31,19.31,13.42,28.09,27.94,27.94,13.22,27.26,27.26,27.26,13.22,13.29,13.29,13.29,13.29,31.22,31.22,31.22,31.22,31.22,31.22,31.22,31.22,31.22,31.22,31.22,31.22,31.22,31.22,31.22,31.22,36.15,36.15,36.15,36.15,36.15,36.16,36.15,36.16,36.15,36.15,36.15,36.15,36.15,36.15,36.15,33.04,33.04,33.04,33.04,33.04,33.04,33.04,33.04,33.04,33.04,33.04,33.04,33.04,33.04,33.04,33.04,33.04,38.00,38.00,38.00,38.00,38.00,38.00,38.00,38.00,37.80,38.00,38.00,38.00,38.00,38.00,38.00,37.80,42.72,42.96,42.96,42.96,42.72,42.72,42.72,42.73,42.73,42.72,42.96,42.72,42.96,42.96,42.72",
    ),
    (
        "#7E57C2",
        "komihash 5.7",
        "-",
        "18.08,19.83,21.69,14.93,29.58,29.51,29.41,26.29,26.29,26.29,26.29,26.29,26.29,26.29,26.29,32.84,32.71,32.78,32.45,32.46,32.05,32.05,32.05,32.05,32.22,32.22,32.05,32.05,32.04,32.05,32.04,36.97,36.97,36.97,36.97,36.97,36.97,36.77,36.78,36.78,36.78,36.77,36.77,36.77,36.77,36.77,36.78,42.49,42.49,42.49,42.49,42.49,43.31,43.15,43.31,42.66,42.66,42.66,42.66,42.66,42.49,42.49,42.49,34.51,34.51,34.51,34.51,34.51,34.51,34.51,34.51,34.51,34.51,34.51,34.51,34.51,34.51,34.51,34.51,40.26,40.26,40.26,40.26,40.26,40.26,40.26,40.26,40.88,40.88,40.88,40.88,40.88,40.88,40.88,40.88",
    ),
)

STATS_ = (
    (
        "#FBC02D",
        "MuseAir 0.3",
        "-",
        "19.52,19.69,19.69,13.08,27.79,27.79,27.79,13.08,26.97,26.97,26.97,13.77,13.77,13.77,13.77,13.77,16.69,16.69,16.69,18.80,18.80,18.80,18.80,18.80,18.80,18.80,18.80,18.80,18.80,18.80,18.80,18.80,36.90,36.90,36.90,36.90,36.90,36.90,36.90,36.90,36.90,36.90,36.90,36.90,36.90,36.90,36.90,35.96,35.96,35.96,35.96,35.96,35.96,35.96,35.96,35.96,35.96,35.96,35.96,35.96,35.96,35.96,35.96,40.04,40.04,40.04,40.04,40.04,40.05,40.05,40.04,40.05,40.04,40.04,40.04,40.04,40.04,40.05,40.04,41.68,41.91,41.91,41.76,42.08,41.69,41.68,41.68,41.86,41.68,41.68,41.68,41.68,41.68,41.68,41.68",
    ),
    (
        "#F4511E",
        "MuseAir-BFast 0.3",
        "--",
        "17.98,18.70,18.90,12.60,26.15,26.29,26.29,12.81,26.29,26.15,26.15,12.67,12.81,12.81,12.81,12.81,16.52,16.52,16.52,17.18,17.18,17.18,17.18,17.18,17.18,17.18,17.18,17.09,17.09,17.18,17.09,17.18,35.06,35.06,35.06,35.06,35.06,35.06,35.06,35.06,35.06,35.06,35.06,35.06,35.06,35.06,35.06,36.15,36.15,36.15,36.15,36.15,36.15,36.15,36.15,36.15,36.15,36.15,36.15,36.15,36.15,36.15,36.15,37.79,37.79,37.79,37.79,37.79,37.59,37.79,37.79,37.79,37.79,37.79,37.79,37.79,37.79,37.79,37.79,39.85,39.86,40.26,39.85,39.85,39.85,39.85,39.85,39.85,39.85,39.85,39.85,39.85,39.85,39.85,39.85",
    ),
)

STATS2 = (
    (
        "#00C853",
        "rust-fxhash32",
        ":",
        "9.04,9.09,13.84,9.09,8.27,8.31,12.39,9.91,12.39,12.39,16.52,12.39,16.53,16.53,20.65,16.52,20.65,20.65,24.79,20.65,24.79,24.79,28.92,24.65,28.92,28.92,33.05,28.92,33.05,33.05,36.97,41.36",
    ),
    (
        "#004D40",
        "rust-fxhash64",
        ":",
        "9.04,9.09,14.62,9.09,8.27,9.09,12.40,18.90,23.01,23.01,27.11,23.70,27.11,27.94,31.22,23.01,27.11,27.11,31.22,27.11,31.22,31.22,35.33,27.11,31.22,31.22,35.33,31.22,35.33,35.33,39.44,31.22",
    ),
)


plt.figure(figsize=(14, 5))

for color, name, dashed, dat in chain(STATS, STATS_):
    plt.plot(
        list(range(1, 96)),
        [float(d) for d in dat.split(",")],
        dashed,
        c=color + "C0",
        label=name,
        linewidth=2.5,
    )
for color, name, dashed, dat in STATS2:
    plt.plot(
        list(range(1, 33)),
        [float(d) for d in dat.split(",")],
        dashed,
        c=color + "E0",
        label=name,
        linewidth=1.2,
    )

plt.setp(plt.legend().get_lines(), linewidth=1.5)
plt.xlim(1, 95)
plt.xticks(list(range(1, 8)) + list(range(8, 96, 4)))
plt.xlabel("N-byte keys")
plt.ylabel("Cycles")
plt.grid(color="#CCC", linestyle="--", linewidth=0.5)
plt.title("Latency for small keys (lower is better)")
plt.tight_layout()
plt.savefig("bench-smallkeys.png")
